/home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/test_lime_diff_NoPrunnedANDpruned.py:12: UserWarning: 
This call to matplotlib.use() has no effect because the backend has already
been chosen; matplotlib.use() must be called *before* pylab, matplotlib.pyplot,
or matplotlib.backends is imported for the first time.

The backend was *originally* set to u'TkAgg' by the following code:
  File "Lenet_SNIP_Lime_Diff.py", line 6, in <module>
    from dataset import Dataset
  File "/home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/dataset.py", line 5, in <module>
    import matplotlib.pyplot as plt
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/pyplot.py", line 69, in <module>
    from matplotlib.backends import pylab_setup
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/backends/__init__.py", line 14, in <module>
    line for line in traceback.format_stack()


  matplotlib.use('Agg')
Using TensorFlow backend.
Lenet_SNIP_Lime_Diff.py:30: UserWarning: 
This call to matplotlib.use() has no effect because the backend has already
been chosen; matplotlib.use() must be called *before* pylab, matplotlib.pyplot,
or matplotlib.backends is imported for the first time.

The backend was *originally* set to u'TkAgg' by the following code:
  File "Lenet_SNIP_Lime_Diff.py", line 6, in <module>
    from dataset import Dataset
  File "/home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/dataset.py", line 5, in <module>
    import matplotlib.pyplot as plt
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/pyplot.py", line 69, in <module>
    from matplotlib.backends import pylab_setup
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/backends/__init__.py", line 14, in <module>
    line for line in traceback.format_stack()


  matplotlib.use('Agg')
WARNING:tensorflow:From /home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/model.py:115: softmax_cross_entropy_with_logits (from tensorflow.python.ops.nn_ops) is deprecated and will be removed in a future version.
Instructions for updating:

Future major versions of TensorFlow will allow gradients to flow
into the labels input on backprop by default.

See `tf.nn.softmax_cross_entropy_with_logits_v2`.

WARNING:tensorflow:From /home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/model.py:182: sparse_to_dense (from tensorflow.python.ops.sparse_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Create a `tf.sparse.SparseTensor` and use `tf.sparse.to_dense` instead.
2019-12-12 13:42:15.107921: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-12-12 13:42:56.853719: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:06:00.0
totalMemory: 11.17GiB freeMemory: 11.11GiB
2019-12-12 13:42:56.853749: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0
2019-12-12 13:42:57.085587: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-12-12 13:42:57.085624: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 
2019-12-12 13:42:57.085631: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N 
2019-12-12 13:42:57.085755: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10762 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:06:00.0, compute capability: 3.7)
('mean, std', 0.13066062, 0.30810776)
('after_normalization_mean, std', -5.1035363e-07, 0.99999946)
("self.dataset['train']['input'].shape", (60000, 32, 32, 3))
|========= START TEST =========|
|================== Samples From Test Data ==================|
lime_base_random_state <mtrand.RandomState object at 0x7f1b918b6e60>
lime_base_random_state [0.37454012 0.95071431 0.73199394 0.59865848 0.15601864]
('LIST_sum_mask_diff', [949, 9, 42, 391, 24, 59, 274, 467, 682, 256, 491, 616, 269, 168, 57, 323, 500, 946, 567, 209, 436, 925, 749, 391, 240, 498, 396, 460, 375, 62, 530, 53, 503, 397, 306, 7, 947, 63, 462, 78, 23, 446, 328, 971, 457, 444, 74, 517, 0, 0, 940, 594, 307, 975, 611, 634, 454, 52, 452, 375, 566, 142, 68, 474, 0, 619, 831, 252, 449, 909, 927, 224, 0, 450, 64, 174, 527, 990, 441, 511, 428, 681, 487, 240, 138, 239, 657, 470, 767, 77, 775, 106, 387, 433, 94, 194, 43, 443, 109, 512])
('mean, std', 397.29, 280.5212066381745)
