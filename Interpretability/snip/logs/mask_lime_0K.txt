/home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/test_lime_diff_NoPrunnedANDpruned.py:12: UserWarning: 
This call to matplotlib.use() has no effect because the backend has already
been chosen; matplotlib.use() must be called *before* pylab, matplotlib.pyplot,
or matplotlib.backends is imported for the first time.

The backend was *originally* set to u'TkAgg' by the following code:
  File "Lenet_SNIP_Lime_Diff.py", line 6, in <module>
    from dataset import Dataset
  File "/home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/dataset.py", line 5, in <module>
    import matplotlib.pyplot as plt
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/pyplot.py", line 69, in <module>
    from matplotlib.backends import pylab_setup
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/backends/__init__.py", line 14, in <module>
    line for line in traceback.format_stack()


  matplotlib.use('Agg')
Using TensorFlow backend.
Lenet_SNIP_Lime_Diff.py:30: UserWarning: 
This call to matplotlib.use() has no effect because the backend has already
been chosen; matplotlib.use() must be called *before* pylab, matplotlib.pyplot,
or matplotlib.backends is imported for the first time.

The backend was *originally* set to u'TkAgg' by the following code:
  File "Lenet_SNIP_Lime_Diff.py", line 6, in <module>
    from dataset import Dataset
  File "/home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/dataset.py", line 5, in <module>
    import matplotlib.pyplot as plt
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/pyplot.py", line 69, in <module>
    from matplotlib.backends import pylab_setup
  File "/home/r/raent/.local/lib/python2.7/site-packages/matplotlib/backends/__init__.py", line 14, in <module>
    line for line in traceback.format_stack()


  matplotlib.use('Agg')
WARNING:tensorflow:From /home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/model.py:115: softmax_cross_entropy_with_logits (from tensorflow.python.ops.nn_ops) is deprecated and will be removed in a future version.
Instructions for updating:

Future major versions of TensorFlow will allow gradients to flow
into the labels input on backprop by default.

See `tf.nn.softmax_cross_entropy_with_logits_v2`.

WARNING:tensorflow:From /home/r/raent/Rahim/NetworkCompression/Single-ModeCompression/Code/Interpretability/LIME/AppliedDeepLearningCourse/Interpretability/snip/model.py:182: sparse_to_dense (from tensorflow.python.ops.sparse_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Create a `tf.sparse.SparseTensor` and use `tf.sparse.to_dense` instead.
2019-12-10 13:51:01.281449: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
2019-12-10 13:51:43.210061: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1432] Found device 0 with properties: 
name: Tesla K80 major: 3 minor: 7 memoryClockRate(GHz): 0.8235
pciBusID: 0000:06:00.0
totalMemory: 11.17GiB freeMemory: 11.11GiB
2019-12-10 13:51:43.210090: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1511] Adding visible gpu devices: 0
2019-12-10 13:51:43.438635: I tensorflow/core/common_runtime/gpu/gpu_device.cc:982] Device interconnect StreamExecutor with strength 1 edge matrix:
2019-12-10 13:51:43.438679: I tensorflow/core/common_runtime/gpu/gpu_device.cc:988]      0 
2019-12-10 13:51:43.438685: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1001] 0:   N 
2019-12-10 13:51:43.438792: I tensorflow/core/common_runtime/gpu/gpu_device.cc:1115] Created TensorFlow device (/job:localhost/replica:0/task:0/device:GPU:0 with 10762 MB memory) -> physical GPU (device: 0, name: Tesla K80, pci bus id: 0000:06:00.0, compute capability: 3.7)
('mean, std', 0.13066062, 0.30810776)
('after_normalization_mean, std', -5.1035363e-07, 0.99999946)
("self.dataset['train']['input'].shape", (60000, 32, 32, 3))
|========= START TEST =========|
|================== Samples From Test Data ==================|
lime_base_random_state <mtrand.RandomState object at 0x7feafbbf4c30>
lime_base_random_state [0.37454012 0.95071431 0.73199394 0.59865848 0.15601864]
('i, one_sample_diff', 0, 67)
('i, one_sample_diff', 1, 1018)
('i, one_sample_diff', 2, 42)
('i, one_sample_diff', 3, 357)
('i, one_sample_diff', 4, 750)
('i, one_sample_diff', 5, 0)
('i, one_sample_diff', 6, 692)
('i, one_sample_diff', 7, 568)
('i, one_sample_diff', 8, 812)
('i, one_sample_diff', 9, 884)
('i, one_sample_diff', 10, 545)
('i, one_sample_diff', 11, 709)
('i, one_sample_diff', 12, 428)
('i, one_sample_diff', 13, 470)
('i, one_sample_diff', 14, 3)
('i, one_sample_diff', 15, 18)
('i, one_sample_diff', 16, 945)
('i, one_sample_diff', 17, 78)
('i, one_sample_diff', 18, 588)
('i, one_sample_diff', 19, 1001)
('i, one_sample_diff', 20, 674)
('i, one_sample_diff', 21, 696)
('i, one_sample_diff', 22, 1024)
('i, one_sample_diff', 23, 931)
('i, one_sample_diff', 24, 1024)
('i, one_sample_diff', 25, 345)
('i, one_sample_diff', 26, 77)
('i, one_sample_diff', 27, 726)
('i, one_sample_diff', 28, 78)
('i, one_sample_diff', 29, 0)
('i, one_sample_diff', 30, 463)
('i, one_sample_diff', 31, 18)
('i, one_sample_diff', 32, 924)
('i, one_sample_diff', 33, 916)
('i, one_sample_diff', 34, 403)
('i, one_sample_diff', 35, 977)
('i, one_sample_diff', 36, 325)
('i, one_sample_diff', 37, 0)
('i, one_sample_diff', 38, 519)
('i, one_sample_diff', 39, 74)
('i, one_sample_diff', 40, 6)
('i, one_sample_diff', 41, 554)
('i, one_sample_diff', 42, 1024)
('i, one_sample_diff', 43, 570)
('i, one_sample_diff', 44, 943)
('i, one_sample_diff', 45, 476)
('i, one_sample_diff', 46, 8)
('i, one_sample_diff', 47, 507)
('i, one_sample_diff', 48, 1024)
('i, one_sample_diff', 49, 926)
('i, one_sample_diff', 50, 1024)
('i, one_sample_diff', 51, 458)
('i, one_sample_diff', 52, 325)
('i, one_sample_diff', 53, 646)
('i, one_sample_diff', 54, 696)
('i, one_sample_diff', 55, 835)
('i, one_sample_diff', 56, 750)
('i, one_sample_diff', 57, 20)
('i, one_sample_diff', 58, 679)
('i, one_sample_diff', 59, 977)
('i, one_sample_diff', 60, 1009)
('i, one_sample_diff', 61, 133)
('i, one_sample_diff', 62, 956)
('i, one_sample_diff', 63, 923)
('i, one_sample_diff', 64, 1024)
('i, one_sample_diff', 65, 960)
('i, one_sample_diff', 66, 498)
('i, one_sample_diff', 67, 251)
('i, one_sample_diff', 68, 418)
('i, one_sample_diff', 69, 994)
('i, one_sample_diff', 70, 97)
('i, one_sample_diff', 71, 474)
('i, one_sample_diff', 72, 981)
('i, one_sample_diff', 73, 464)
('i, one_sample_diff', 74, 52)
('i, one_sample_diff', 75, 455)
('i, one_sample_diff', 76, 946)
('i, one_sample_diff', 77, 571)
('i, one_sample_diff', 78, 941)
('i, one_sample_diff', 79, 393)
('i, one_sample_diff', 80, 609)
('i, one_sample_diff', 81, 681)
('i, one_sample_diff', 82, 555)
('i, one_sample_diff', 83, 775)
('i, one_sample_diff', 84, 138)
('i, one_sample_diff', 85, 785)
('i, one_sample_diff', 86, 5)
('i, one_sample_diff', 87, 908)
('i, one_sample_diff', 88, 308)
('i, one_sample_diff', 89, 571)
('i, one_sample_diff', 90, 406)
('i, one_sample_diff', 91, 1024)
('i, one_sample_diff', 92, 951)
('i, one_sample_diff', 93, 900)
('i, one_sample_diff', 94, 0)
('i, one_sample_diff', 95, 799)
('i, one_sample_diff', 96, 0)
('i, one_sample_diff', 97, 18)
('i, one_sample_diff', 98, 538)
('i, one_sample_diff', 99, 897)
('LIST_sum_mask_diff', [67, 1018, 42, 357, 750, 0, 692, 568, 812, 884, 545, 709, 428, 470, 3, 18, 945, 78, 588, 1001, 674, 696, 1024, 931, 1024, 345, 77, 726, 78, 0, 463, 18, 924, 916, 403, 977, 325, 0, 519, 74, 6, 554, 1024, 570, 943, 476, 8, 507, 1024, 926, 1024, 458, 325, 646, 696, 835, 750, 20, 679, 977, 1009, 133, 956, 923, 1024, 960, 498, 251, 418, 994, 97, 474, 981, 464, 52, 455, 946, 571, 941, 393, 609, 681, 555, 775, 138, 785, 5, 908, 308, 571, 406, 1024, 951, 900, 0, 799, 0, 18, 538, 897])
('mean, std', 560.25, 352.71986122849745)
